// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"

  url = env("DATABASE_URL")
}

//url       = env("PRISMA_URL") // uses connection pooling
//url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
//directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  Recipe    Recipe[]
}

model Recipe {
  id             Int      @id @default(autoincrement())
  name           String
  slug           String
  description    String
  authorUsername String
  author         User     @relation(fields: [authorUsername], references: [username])
  updatedAt      DateTime @default(now())
  createdAt      DateTime @default(now())
}

model Yeast {
  id          Int     @id @default(autoincrement())
  name        String
  slug        String  @unique
  description String?
  country     String?
  tolerance   Float?
  attenuation Float?
}

model Fermentable {
  id          Int     @id @default(autoincrement())
  name        String
  slug        String  @unique
  description String?
  notes       String?
  country     String?
  usage       String?
  power       Int?
  maxUsage    Float?
  color       Float?
  potential   Float?
  stability   String?
}

enum StyleCategory {
  BEER
  MEAD
  CIDER
}

model Style {
  id            Int           @id @default(autoincrement())
  name          String
  slug          String        @unique
  category      StyleCategory
  subcategoryId String
  identifier    String
  aroma         String?
  appearance    String?
  flavor        String?
  mouthfeel     String?
  comments      String?
  history       String?
  ingredients   String?
  comparison    String?
  examples      String?
  ibuLow        Float?
  ibuHigh       Float?
  ibuFlex       Boolean       @default(false)
  ogLow         Float?
  ogHigh        Float?
  ogFlex        Boolean       @default(false)
  fgLow         Float?
  fgHigh        Float?
  fgFlex        Boolean       @default(false)
  srmLow        Float?
  srmHigh       Float?
  srmFlex       Boolean       @default(false)
  abvLow        Float?
  abvHigh       Float?
  abvFlex       Boolean       @default(false)
}

model Hop {
  id                Int      @id @default(autoincrement())
  name              String
  slug              String   @unique
  description       String?
  country           String?
  usage             String?
  alpha             Float?
  alphaLow          Float?
  alphaHigh         Float?
  beta              Float?
  betaLow           Float?
  betaHigh          Float?
  caryophyllene     Float?
  caryophylleneLow  Float?
  caryophylleneHigh Float?
  cohumulone        Float?
  cohumuloneLow     Float?
  cohumuloneHigh    Float?
  farnesene         Float?
  farneseneLow      Float?
  farneseneHigh     Float?
  humulene          Float?
  humuleneLow       Float?
  humuleneHigh      Float?
  myrcene           Float?
  myrceneLow        Float?
  myrceneHigh       Float?
  totalOil          Float?
  totalOilLow       Float?
  totalOilHigh      Float?
  purpose           String?
  flavor            String?
  notes             String?
  substitutesString String[]
  styles            String[]
}
